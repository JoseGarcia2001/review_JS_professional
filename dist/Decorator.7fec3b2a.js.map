{"version":3,"sources":["designPatterns/Decorator/index.ts"],"names":[],"mappings":"AAAA,IAAA,KAAA;AAAA;AAAA,YAAA;AAGE,WAAA,KAAA,CAAY,KAAZ,EAAiB;AAAjB,QAAA,KAAA,GAAA,IAAA;;AACE,SAAK,KAAL,GAAa,KAAb;AACA,SAAK,MAAL,GAAc,EAAd;AACA,QAAI,YAAY,GAAG,QAAQ,CAAC,aAAT,CAAuB,GAAvB,CAAnB;AACA,SAAK,KAAL,CAAW,UAAX,CAAsB,YAAtB,CAAmC,YAAnC,EAAiD,KAAK,KAAL,CAAW,WAA5D;AACA,SAAK,KAAL,CAAW,gBAAX,CAA4B,OAA5B,EAAqC,YAAA;AACnC,MAAA,KAAI,CAAC,MAAL,GAAc,EAAd;;AACA,MAAA,KAAI,CAAC,QAAL;;AACA,MAAA,YAAY,CAAC,SAAb,GAAyB,KAAI,CAAC,MAAL,CAAY,CAAZ,KAAkB,EAA3C;AACD,KAJD;AAKD;;AAED,EAAA,KAAA,CAAA,SAAA,CAAA,QAAA,GAAA,YAAA,CAAa,CAAb;;AACF,SAAA,KAAA;AAhBA,CAAA,EAAA;;AAkBA,SAAS,sBAAT,CAAgC,KAAhC,EAA4C;AAC1C,MAAI,QAAQ,GAAG,KAAK,CAAC,QAArB;;AACA,EAAA,KAAK,CAAC,QAAN,GAAiB,YAAA;AACf,IAAA,QAAQ;AACR,QAAI,KAAK,GAAG,KAAK,CAAC,KAAN,CAAY,KAAxB;;AACA,QAAI,CAAC,KAAL,EAAY;AACV,MAAA,KAAK,CAAC,MAAN,CAAa,IAAb,CAAkB,4CAAlB;AACD;AACF,GAND;;AAOA,SAAO,KAAP;AACD;;AAED,SAAS,mBAAT,CAA6B,KAA7B,EAAyC;AACvC,MAAI,QAAQ,GAAG,KAAK,CAAC,QAArB;;AACA,EAAA,KAAK,CAAC,QAAN,GAAiB,YAAA;AACf,IAAA,QAAQ;AACR,QAAI,KAAK,GAAG,KAAK,CAAC,KAAN,CAAY,KAAxB;;AACA,QAAI,KAAK,CAAC,OAAN,CAAc,GAAd,MAAuB,CAAC,CAA5B,EAA+B;AAC7B,MAAA,KAAK,CAAC,MAAN,CAAa,IAAb,CAAkB,mBAAlB;AACD;AACF,GAND;;AAOA,SAAO,KAAP;AACD;;AAED,IAAM,KAAK,GAAG,QAAQ,CAAC,cAAT,CAAwB,OAAxB,CAAd;AACA,IAAI,eAAe,GAAG,IAAI,KAAJ,CAAU,KAAV,CAAtB;AAEA,eAAe,GAAG,sBAAsB,CAAC,eAAD,CAAxC;AACA,eAAe,GAAG,mBAAmB,CAAC,eAAD,CAArC","file":"Decorator.7fec3b2a.js","sourceRoot":"..","sourcesContent":["class Field {\n  field: HTMLInputElement;\n  errors: any[];\n  constructor(field) {\n    this.field = field;\n    this.errors = [];\n    let errorMessage = document.createElement(\"p\");\n    this.field.parentNode.insertBefore(errorMessage, this.field.nextSibling);\n    this.field.addEventListener(\"input\", () => {\n      this.errors = [];\n      this.validate();\n      errorMessage.innerText = this.errors[0] || \"\";\n    });\n  }\n\n  validate() {}\n}\n\nfunction RequiredFieldDecorator(field: Field): Field {\n  let validate = field.validate;\n  field.validate = function () {\n    validate();\n    let value = field.field.value;\n    if (!value) {\n      field.errors.push(\"Lo siento, este campo no puede estar vac√≠o\");\n    }\n  };\n  return field;\n}\n\nfunction EmailFieldDecorator(field: Field): Field {\n  let validate = field.validate;\n  field.validate = function () {\n    validate();\n    let value = field.field.value;\n    if (value.indexOf(\"@\") === -1) {\n      field.errors.push(\"Debe ser un email\");\n    }\n  };\n  return field;\n}\n\nconst field = document.getElementById(\"field\");\nlet fieldToValidate = new Field(field);\n\nfieldToValidate = RequiredFieldDecorator(fieldToValidate);\nfieldToValidate = EmailFieldDecorator(fieldToValidate);\n"]}