{"version":3,"sources":["media-player/MediaPlayer.js","media-player/plugins/AutoPlay.js","media-player/plugins/AutoPause.js","media-player/index.js"],"names":["MediaPlayer","constructor","props","media","plugins","runPlugins","togglePlay","paused","play","pause","toggleMute","muted","forEach","plugin","run","AutoPlay","AutoPause","handleIntersection","bind","handleVisibility","md","observer","IntersectionObserver","threshold","observe","document","addEventListener","entries","isIntersecting","isVisible","visibilityState","playButton","querySelector","muteButton","miMedia","myPlayer","imageToToggle","buttonMessage","playSource","pauseSource","src","textContent","navigator","serviceWorker","register","catch","error","console","log","message"],"mappings":";;AGAA;;AACA;;AACA;AHFA,AEAA,ADAA,MDAMA,AEAAgB,ADAAD,QAAN,CCAA,ADAe,CCAC,CFAhB,CAAkB;AAChBd,AEAAA,ADAAa,EDAAb,AEAAA,ADAAa,GAAG,CAACX,KAAD,EDAQ,AEAA,ADAA,CDACD,EEAE,GFAH,EAAQ;AACjB,AEAA,ADAAC,IAAAA,KDAKA,AEAAc,ADAA,CAACX,IDAN,GAAaJ,GCAb,EDAkB,CAACC,IEAnB,CFAA,EEA0B,KAAKc,kBAAL,CAAwBC,IAAxB,CAA6B,IAA7B,CAA1B;AFCA,AGCJ,ADDI,ADAAf,IAAAA,EECE4B,GHDG3B,AEAAe,ADAA,CAACT,MDAN,AGCY,GHDGR,AGCAuB,CFDf,IDAoB,CAACrB,AEArB,ECCuB,CAAC4B,ADDA,IFAT,CEAcb,GFAG,EAAhC,GGCe,CAAuB,ODDd,CAAsBD,IAAtB,CAA2B,ICCpC,ADDS,CCC5B,ADDI;AFCA,AGCJ,ADDG,ADAA,MECGe,GHDG5B,OGCO,GHDZ,AGCeoB,QAAQ,CAACO,aAAT,CAAuB,iBAAvB,CAAnB;AHAG,AGEH,MAAME,OAAO,GAAGT,QAAQ,CAACO,aAAT,CAAuB,cAAvB,CAAhB;AACA,ADFElB,ADNa,ECMbA,GAAG,CCECqB,ADFAf,EAAD,EAAK,ICEI,GAAG,IAAIpB,oBAAJ,CAAgB;AHD/BM,AGEAH,ADFE,EFAFG,AGEAH,KAAK,EAAE+B,ADFA/B,GFAG,EEAR,CFAW,CGCkB,CDDhBiB,EAAb;AFCA,AGEFhB,ADDE,ECCFA,OHFOD,AGEA,CDDCkB,CCCC,CAAC,EHFR,CAAWd,ACDAQ,CEGCA,EDDE,GFDd,AECiB,GFDG,CECCO,IFDInB,IGEjB,CHFY,CAAWK,AGExB,EAAiB,EHFJ,EAApB,AGE4BQ,GHFY,CECvB,CAAyB,GFDGb,EECEc,GFDP,CAAWR,IGE3B,CHFgB,CGEjC,CHFP,OECiB,EAAkD;AFApE,AGD8B,ADE3Bc,CCFW,CAAjB,IDEMA,SAAS,EAAE;ACGjBQ,ADJuE,KAAlD,CAAjB,ICIM,CAACL,gBAAX,CAA4B,OAA5B,EAAqC,MAAM;AHFzChB,AGGA,ADFEW,EFDFX,EECEW,ICEIe,IHHI,AECA,CAACZ,EFDE,KECX,CCEiB,ADFAJ,EAAE,CCECK,ADFAtB,KAApB,GCE4B,CAAC6B,aAAT,CAAuB,cAAvB,CAAtB;AHFE,AGGF,ADDEP,IAAAA,ICCIY,CHHClC,GEEG,CAACuB,CFFT,CAAWf,KAAX,CGGiB,EHHG,CGGAc,IHHKtB,CEEzB,CAA0B,ECCE,CHHR,AGGS6B,CHHErB,KAAX,GAAmB,IGGnB,CHHpB,AGG2C,CDD3C,EFFiD,AEEH,KFFQR,AEEHgB,KFFF,CAAWR,KAAX,AGG7B,CAAtB,EHHsE,EEEpE,EFFA;AACD,AGID,ADFC,QCEK2B,UAAU,GAAG,uDAAnB;AACA,QAAMC,WAAW,GAAG,wDAApB;AHHAlC,AEEAY,EFFAZ,AEEAY,UFFU,GAAG,KEEK,CAACU,OAAD,EAAU;AFD1B,AGIF,ADFE,MCEEQ,EDFER,CFFCvB,KGIK,CAACD,ADFA,CFFX,AEEY,CFFCS,AEEF,CAAP,CAAWgB,CCEb,CAAerB,GHJjB,CAAsBM,EGIxB,EAA2B,EHJJ,EEErB,EFFiCA,AEEF,MFFQ,CAACC,GAAP,CAAW,IAAX,CAAjC;AACD,AGICqB,ADFE,ICEFA,ODFOhC,CCEC,CAACG,GDFP,CAAWH,KAAX,CCEF,ADFmBK,IAAjB;ACGF4B,ADFC,ICEDA,CDJA,MAEO,MCEM,CAACI,GAAd,GAAoBD,WAApB;AHtBc,AGuBdF,ADFE,ICEFA,ODFOlC,KAAL,CCEW,ADFAA,CCECsC,IDFZ,CAAiBhC,KAAjB,CCEF,GAA4B,UAA5B;AACD,ADFE,GCFH,MAIO;AACL0B,ADFD,ICECA,QAAQ,CAAC7B,EHLEN,QGKX;AACAoC,IAAAA,aAAa,CAACI,GAAd,GAAoBF,UAApB;AACAD,ADFFlB,EAAAA,ECEEkB,aAAa,CAACI,ADFA,GAAG,QCEjB,GAA4B,QAA5B;AACD,ADFC,QAAIZ,SAAS,GAAGJ,QAAQ,CAACK,eAAT,KAA6B,SAA7C;ACGH,ADFGD,CCdJ,GDcIA,SAAS,GAAG,KAAK1B,KAAL,CAAWA,KAAX,CAAiBK,IAAjB,EAAH,GAA6B,KAAKL,KAAL,CAAWA,KAAX,CAAiBM,KAAjB,EAAtC;ACIJwB,ADHG,UCGO,CAACP,gBAAX,CAA4B,OAA5B,EAAqC,MAAM;AACzCS,EAAAA,QAAQ,CAACzB,UAAT;AACD,ADjCe,CC+BhB;;AAIA,IAAI,WDJWM,QCIQ0B,SAAvB,EAAkC;AAChCA,EAAAA,SAAS,CAACC,aAAV,CACGC,QADH,CACY,sCADZ,EAEGC,KAFH,CAEUC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB,CAFpB;AAGD","file":"media-player.2333303b.js","sourceRoot":"..","sourcesContent":["class MediaPlayer {\n  constructor(props) {\n    this.media = props.media;\n    this.plugins = props.plugins || [];\n    this.runPlugins();\n  }\n\n  togglePlay() {\n    this.media.paused ? this.media.play() : this.media.pause();\n  }\n\n  toggleMute() {\n    this.media.muted ? (this.media.muted = false) : (this.media.muted = true);\n  }\n\n  runPlugins() {\n    this.plugins.forEach((plugin) => plugin.run(this));\n  }\n}\n\nexport default MediaPlayer;\n","class AutoPlay {\n  run(media) {\n    media.togglePlay();\n    media.toggleMute();\n  }\n}\n\nexport default AutoPlay;\n","class AutoPause {\n  constructor() {\n    this.handleIntersection = this.handleIntersection.bind(this);\n    this.handleVisibility = this.handleVisibility.bind(this);\n  }\n\n  run(md) {\n    this.media = md;\n\n    const observer = new IntersectionObserver(this.handleIntersection, {\n      threshold: 0.5,\n    });\n    observer.observe(md.media);\n\n    document.addEventListener(\"visibilitychange\", this.handleVisibility);\n  }\n\n  handleIntersection(entries) {\n    if (entries[0].isIntersecting) {\n      this.media.media.play();\n    } else {\n      this.media.media.pause();\n    }\n  }\n\n  handleVisibility() {\n    let isVisible = document.visibilityState === \"visible\";\n    isVisible ? this.media.media.play() : this.media.media.pause();\n  }\n}\n\nexport default AutoPause;\n","import MediaPlayer from \"./MediaPlayer.js\";\nimport AutoPlay from \"./plugins/AutoPlay.js\";\nimport AutoPause from \"./plugins/AutoPause.js\";\n\nconst playButton = document.querySelector(\".play-container\");\nconst muteButton = document.querySelector(\".mute-container\");\n\nconst miMedia = document.querySelector(\".media-video\");\nconst myPlayer = new MediaPlayer({\n  media: miMedia,\n  plugins: [new AutoPlay(), new AutoPause()],\n});\n\nplayButton.addEventListener(\"click\", () => {\n  const imageToToggle = document.querySelector(\".play-button\");\n  const buttonMessage = document.querySelector(\".play-container p\");\n\n  const playSource = \"https://img.icons8.com/plasticine/100/000000/play.png\";\n  const pauseSource = \"https://img.icons8.com/plasticine/100/000000/pause.png\";\n\n  if (myPlayer.media.paused) {\n    myPlayer.togglePlay();\n    imageToToggle.src = pauseSource;\n    buttonMessage.textContent = \"Pause :/\";\n  } else {\n    myPlayer.togglePlay();\n    imageToToggle.src = playSource;\n    buttonMessage.textContent = \"Â¡Play!\";\n  }\n});\n\nmuteButton.addEventListener(\"click\", () => {\n  myPlayer.toggleMute();\n});\n\nif (\"serviceWorker\" in navigator) {\n  navigator.serviceWorker\n    .register(\"./sw.js\")\n    .catch((error) => console.log(error.message));\n}\n"]}